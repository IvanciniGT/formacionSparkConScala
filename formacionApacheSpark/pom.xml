<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.curso</groupId>
    <artifactId>formacionApacheSpark</artifactId>
    <version>1.0-SNAPSHOT</version>



    <!--
      Aquí podemos definir:
     - Variables que podemos usar a lo largo de to do el POM: scala.version
     - Podemos sumnistrar variable de configuración para los plugins que usemos:
       maven.compiler.source -> Esta es un propiedad que usa el plugin de compilación para determinar cómo producir el byte code.
                                Sobre que versión de la máquina virtual de JAVA vamos a correr nuestro programa.
    -->
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <scala.version>2.13.12</scala.version>
        <scala.binary.version>2.13</scala.binary.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- prop para el plugin que copia archivos -->
    </properties>

    <!-- Librerías que nuestro proyecto necesita -->
    <dependencies>
        <!-- Scala Library -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- Scala Compiler (para poder compilar) -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <!-- Dependencia de Apache Spark Core -->
        <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-core -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.13</artifactId>
            <version>3.5.7</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.17</version>
        </dependency>

    </dependencies>

    <!-- Aquí se configuran los plugins-->
    <build>
        <sourceDirectory>src/main/scala</sourceDirectory> <!-- Indicamos la carpeta que tiene nuestro código fuente -->
        <plugins>
            <!-- Plugin para compilar Scala. Lo que hace es posibilita a MAVEN para llamar a la librería de compilación de scala -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.8.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                Plugin para ejecutar aplicaciones fácilmente. Esto está bien para pruebas.
                En nuestro caso, trabajando con Spark, la ejecución de programa irá por otro lado!
                Se hace de otra forma... muy distinta.
                Por ahora, para trabajar con Scala sin Spark...O para trabajar con Spark en local, si me sirve!
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
        </plugins>
    </build>



</project>